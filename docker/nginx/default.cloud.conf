# Installed by executing "certbot install --cert-name wav-helper.com" on a running nginx server in hetzner vps with the default.local.conf config. 
# (installation needs /etc/letsencrypt to exist)

map $http_origin $cors_origin {
    default "";
    "https://wav.ninja" "https://wav.ninja";
    "http://127.0.0.1" "http://127.0.0.1";
    "https://youtube-cutter-dev-1942500617.us-east-1.elb.amazonaws.com" "https://youtube-cutter-dev-1942500617.us-east-1.elb.amazonaws.com";
}

server {
    server_name wav-helper.com;

    location / {
        if ($cors_origin != "") {
            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        }

        proxy_pass http://flask:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_connect_timeout       120;
        proxy_send_timeout          120;
        proxy_read_timeout          120;
        send_timeout                120;
    }

    location /audio/ {
        if ($cors_origin != "") {
            add_header 'Access-Control-Allow-Origin' "$cors_origin" always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        }

        types {
            mp3 application/octet-stream;
        }
        default_type application/octet-stream;
        add_header Content-Disposition 'attachment';

        alias /audio/;

        proxy_connect_timeout       120;
        proxy_send_timeout          120;
        proxy_read_timeout          120;
        send_timeout                120;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/wav-helper.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/wav-helper.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = wav-helper.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name wav-helper.com;
    listen 80;
    return 404; # managed by Certbot
}